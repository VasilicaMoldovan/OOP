     1                                  bits 32 
     2                                  
     3                                  ;Calculati (a - b - c) + (d - b - c) - (a - d)
     4                                  ;Interpretare cu semn
     5                                  global start        
     6                                  
     7                                  extern exit              
     8                                  import exit msvcrt.dll    
     9                                                          
    10                                  segment data use32 class=data
    11 00000000 03                          a db 3
    12 00000001 0800                        b dw 8
    13 00000003 0A000000                    c dd 10
    14 00000007 0F00000000000000            d dq 15
    15                                     
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 A0[00000000]                    mov AL, [a]     ; AL = a
    19 00000005 6698                            cbw            ; conversie cu semn de la AL la AX
    20 00000007 662B05[01000000]                sub AX, word[b] ; AX = a - b
    21 0000000E 98                              cwde           ; conversie cu semn de la AX la EAX
    22 0000000F 2B05[03000000]                  sub EAX, dword[c]   ; EAX = a - b - c
    23 00000015 8B1D[07000000]                  mov EBX, dword[d]
    24 0000001B 8B0D[0B000000]                  mov ECX, dword[d + 4] ; ECX:EBX = d
    25 00000021 2B1D[01000000]                  sub EBX, dword[b]     ; ECX:EBX = d - b 
    26 00000027 2B1D[03000000]                  sub EBX, dword[c]
    27 0000002D 1B0D[05000000]                  sbb ECX, dword[c + 2] ; ECX:EBX = d - b - c
    28                                          ;sub EBX, dword[c]     ; ECX:EBX = d - b - c
    29 00000033 01D8                            add EAX, EBX
    30 00000035 11CA                            adc EDX, ECX          ; EDX:EAX = (a - b - c) + (d - b - c)
    31 00000037 89C3                            mov EBX, EAX
    32 00000039 89D1                            mov ECX, EDX          ; ECX:EBX = (a - b - c) + (d - b - c)
    33 0000003B A0[00000000]                    mov AL, [a]         ; AL = a
    34 00000040 6698                            cbw                 ; conversie cu semn de la AL la AX
    35 00000042 98                              cwde                 ; conversie cu semn de la AX la EAX
    36 00000043 BA00000000                      mov EDX, 0
    37 00000048 2B05[07000000]                  sub EAX, dword[d]
    38 0000004E 1B15[09000000]                  sbb EDX, dword[d + 2] ; EDX:EAX = a - d
    39 00000054 29C3                            sub EBX, EAX
    40 00000056 19D1                            sbb ECX, EDX          ; ECX:EBX = (a - b - c) + (d - b - c) - (a - d)
    41 00000058 89D8                            mov EAX, EBX
    42 0000005A 89CA                            mov EDX, ECX          ; EDX:EAX = (a - b - c) + (d - b - c) - (a - d)
    43                                          
    44                                          
    45                                     
    46 0000005C 6A00                            push    dword 0      
    47 0000005E FF15[00000000]                  call    [exit]       
