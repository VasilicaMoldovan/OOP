     1                                  bits 32 
     2                                  
     3                                  ;Calculati (a - b - c) + (d - b - c) - (a - d)
     4                                  ;Interpretare cu semn
     5                                  global start        
     6                                  
     7                                  extern exit              
     8                                  import exit msvcrt.dll    
     9                                                          
    10                                  segment data use32 class=data
    11 00000000 03                          a db 3
    12 00000001 0800                        b dw 8
    13 00000003 0A000000                    c dd 10
    14 00000007 0F000000                    d dd 15
    15                                     
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 A0[00000000]                    mov AL, [a]     ; AL = a
    19 00000005 6698                            cbw            ; conversie cu semn de la AL la AX
    20 00000007 662B05[01000000]                sub AX, word[b] ; AX = a - b
    21 0000000E 98                              cwde           ; conversie cu semn de la AX la EAX
    22 0000000F 2B05[03000000]                  sub EAX, dword[c]   ; EAX = a - b - c 
    23 00000015 8B1D[07000000]                  mov EBX, dword[d]   ; EBX = d 
    24 0000001B 89C2                            mov EDX, EAX        ; EDX = a - b - c 
    25 0000001D 66A1[01000000]                  mov AX, word[b]     ; AX = b 
    26 00000023 98                              cwde                ; conversie cu semn de la AX la EAX
    27 00000024 29C3                            sub EBX, EAX        ; EBX = d - b 
    28 00000026 2B1D[03000000]                  sub EBX, dword[c]   ; EBX = d - b - c 
    29 0000002C 01DA                            add EDX, EBX        ; EDX = (a - b - c) + (d - b - c)
    30 0000002E A0[00000000]                    mov AL, [a]         ; AL = a
    31 00000033 6698                            cbw                 ; conversie cu semn de la AL la AX
    32 00000035 98                              cwde                ; conversie cu semn de la AX la EAX
    33 00000036 2B05[07000000]                  sub EAX, dword[d]   ; EAX = a - d 
    34 0000003C 29C2                            sub EDX, EAX        ; EDX = (a - b - c) + (d - b - c) - (a - d)
    35 0000003E 89D0                            mov EAX, EDX        ; EDX = (a - b - c) + (d - b - c) - (a - d)
    36                                          
    37                                          
    38                                     
    39 00000040 6A00                            push    dword 0      
    40 00000042 FF15[00000000]                  call    [exit]       
