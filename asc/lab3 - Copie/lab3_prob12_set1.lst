     1                                  bits 32 
     2                                  
     3                                  ;Calculati (a+b+d)-(a-c+d)+(b-c)
     4                                  ;Interpretare fara semn
     5                                   
     6                                  global start        
     7                                  extern exit               
     8                                  import exit msvcrt.dll    
     9                                                            
    10                                  
    11                                  segment data use32 class=data
    12 00000000 03                          a DB 3
    13 00000001 0800                        b DW 8
    14 00000003 09000000                    c DD 9
    15 00000007 0A000000                    d DD 10
    16                                  
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 A0[00000000]                    mov AL, [a]     ; AL = a
    20 00000005 B400                            mov AH, 0       ; conversie fara semn de la AL la AX
    21 00000007 660305[01000000]                add AX, [b]     ; AX = a + b
    22 0000000E 66BA0000                        mov DX, 0       ; conversie fara semn de la AX la DX:AX
    23 00000012 6650                            push AX
    24 00000014 6652                            push DX
    25 00000016 58                              pop EAX         ; conversie fara semn de la DX:AX la EAX
    26 00000017 0305[07000000]                  add EAX, dword[d]   ; EAX = a + b + d
    27 0000001D 8A1D[00000000]                  mov BL, [a]     ; BL = a
    28 00000023 B700                            mov BH, 0       ; conversie fara semn de la BL la BX
    29 00000025 66B90000                        mov CX, 0       ; conversie fara semn de la BX la CX:BX
    30 00000029 6653                            push BX
    31 0000002B 6651                            push CX
    32 0000002D 5B                              pop EBX         ; conversie fara semn de la CX:BX la EBX
    33 0000002E 2B1D[03000000]                  sub EBX, dword[c]   ; EBX = a - c
    34 00000034 031D[07000000]                  add EBX, dword[d]   ; EBX = a - c + d
    35 0000003A 29D8                            sub EAX, EBX        ; EAX = (a + b + d) - (a - c + d)
    36 0000003C 668B1D[01000000]                mov BX, [b]             ; BX = b
    37 00000043 66B90000                        mov CX, 0               ; conversie de la BX la CX:BX
    38 00000047 6653                            push BX
    39 00000049 6651                            push CX
    40 0000004B 5B                              pop EBX         ; conversie fara semn de la CX:BX la EBX
    41 0000004C 2B1D[03000000]                  sub EBX, dword[c]       ; EBX = b - c
    42 00000052 01D8                            add EAX, EBX    ; EAX = (a + b + d) - (a - c + d) + (b - c)
    43                                          
    44                                          
    45                                          
    46 00000054 6A00                            push    dword 0      
    47 00000056 FF15[00000000]                  call    [exit]       
