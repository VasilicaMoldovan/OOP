     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fwrite, fopen, fclose, printf, scanf, fprintf
     5                                  import fprintf msvcrt.dll 
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll  
     8                                  import exit msvcrt.dll
     9                                  import fwrite msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll 
    12                                  
    13                                  segment data use32 class=data public
    14 00000000 257300                      format db '%s', 0
    15 00000003 00000000                    new_word dd 0
    16 00000007 00000000                    sir dd 0
    17 0000000B 00000000                    result dd 0
    18                                      
    19                                  
    20                                  segment code use32 class=code public 
    21                                      start:
    22                                          read:
    23 00000000 C705[03000000]0000-                mov dword[new_word], 0
    23 00000008 0000               
    24 0000000A 68[03000000]                       push dword new_word
    25 0000000F 68[00000000]                       push dword format
    26 00000014 FF15[00000000]                     call [scanf]
    27 0000001A 83C408                             add esp, 4*2
    28                                             
    29 0000001D B900000000                         mov ecx, 0
    30                                             repeta:
    31 00000022 83B9[03000000]00                       cmp dword[new_word + ecx], 0
    32 00000029 7403                                   je skip
    33 0000002B 41                                     inc ecx 
    34 0000002C EBF4                                   jmp repeta
    35                                                 
    36                                             skip:
    37 0000002E BF[07000000]                         mov edi, sir 
    38                                               reverse:
    39 00000033 8B81[02000000]                           mov eax, dword[new_word + ecx - 1]
    40 00000039 AA                                       stosb 
    41 0000003A E2F7                                     loop reverse
    42                                                   
    43                                              ;mov dword[result], edi
    44 0000003C FF37                                push dword[edi] 
    45 0000003E 68[00000000]                        push dword format
    46 00000043 FF15[00000000]                      call [printf]
    47 00000049 83C408                              add esp, 4*2
    48                                              
    49 0000004C 833D[03000000]0A                   cmp dword[new_word], 0Ah
    50 00000053 7402                               je finish
    51 00000055 EBA9                               jmp read 
    52                                             
    53                                          finish:
    54 00000057 6A00                        push    dword 0
    55 00000059 FF15[00000000]              call    [exit]
