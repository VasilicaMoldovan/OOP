     1                                  bits 32
     2                                  global start
     3                                  extern exit, scanf, printf
     4                                  import exit msvcrt.dll
     5                                  import scanf msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 0000                        a dw 0
    10 00000002 0000                        b dw 0
    11 00000004 00000000                    rezultat dd 0
    12 00000008 613D00                      format1 db 'a=', 0
    13 0000000B 623D00                      format2 db 'b=', 0
    14 0000000E 256400                      readformat db '%d', 0
    15                                      
    16                                  ;Sa se citeasca de la tastatura doua numere (in baza 10) si sa se calculeze produsul lor. Rezultatul inmultirii se va salva in memorie in variabila "rezultat" (definita in segmentul de date).
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 68[08000000]                    push dword format1
    20 00000005 FF15[00000000]                  call [printf]
    21 0000000B 83C404                          add ESP, 4*1
    22                                          
    23 0000000E 68[00000000]                    push dword a
    24 00000013 68[0E000000]                    push dword readformat
    25 00000018 FF15[00000000]                  call [scanf]
    26 0000001E 83C408                          add ESP, 4*2
    27                                          
    28 00000021 68[0B000000]                    push dword format2
    29 00000026 FF15[00000000]                  call [printf]
    30 0000002C 83C404                          add ESP, 4*1
    31                                          
    32 0000002F 68[02000000]                    push dword b 
    33 00000034 68[0E000000]                    push dword readformat
    34 00000039 FF15[00000000]                  call [scanf]
    35 0000003F 83C408                          add ESP, 4*2
    36                                          
    37 00000042 66A1[00000000]                  mov AX, [a]     ; AX = a
    38 00000048 66F725[02000000]                mul word[b]     ; DX:AX = AX * b = a * b
    39 0000004F 6652                            push DX
    40 00000051 6650                            push AX
    41 00000053 58                              pop EAX         ; EAX = a * b
    42 00000054 A3[04000000]                    mov [rezultat], EAX     ; rezultat = a * b 
    43                                       
    44 00000059 6A00                        push    dword 0
    45 0000005B FF15[00000000]              call    [exit]
