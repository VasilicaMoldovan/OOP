     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fwrite, fopen, fclose, printf, scanf, fprintf
     5                                  import fprintf msvcrt.dll 
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll  
     8                                  import exit msvcrt.dll
     9                                  import fwrite msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll 
    12                                  
    13                                  segment data use32 class=data public
    14 00000000 257300                      format db '%s', 0
    15 00000003 00000000                    new_word dd 0
    16                                      
    17                                  
    18                                  segment code use32 class=code public 
    19                                      start:
    20                                          read:
    21 00000000 C705[03000000]0000-                mov dword[new_word], 0
    21 00000008 0000               
    22 0000000A 68[03000000]                       push dword new_word
    23 0000000F 68[00000000]                       push dword format
    24 00000014 FF15[00000000]                     call [scanf]
    25 0000001A 83C408                             add esp, 4*2
    26                                             
    27 0000001D B900000000                         mov ecx, 0
    28                                             repeta:
    29 00000022 83B9[03000000]00                       cmp dword[new_word + ecx], 0
    30 00000029 7403                                   je skip
    31 0000002B 41                                     inc ecx 
    32 0000002C EBF4                                   jmp repeta
    33                                                 
    34                                             skip:
    35 0000002E BF00000000                           mov edi, 0
    36                                               reverse:
    37 00000033 8B81[03000000]                           mov eax, dword[new_word + ecx]
    38 00000039 AB                                       stosd 
    39 0000003A E2F7                                     loop reverse
    40                                                   
    41 0000003C 8B07                                mov eax, [edi]
    42 0000003E 50                                  push eax
    43 0000003F 68[00000000]                        push dword format
    44 00000044 FF15[00000000]                      call [printf]
    45 0000004A 83C408                              add esp, 4*2
    46                                              
    47 0000004D 833D[03000000]0A                   cmp dword[new_word], 0Ah
    48 00000054 7400                               je finish
    49                                             
    50                                          finish:
    51 00000056 6A00                        push    dword 0
    52 00000058 FF15[00000000]              call    [exit]
